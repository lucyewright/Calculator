{"version":3,"sources":["calculate.js","index.js"],"names":["calculate","num1","o","num2","n1","Number","n2","undefined","initialOperators","sum","findIndex","item","secondOperators","operatorEnd","last","length","equals","splice","i","mini","slice","ans","displayNum","storeSum","storeOperator","decimal","lastClicked","display","document","getElementById","rt","clearDisplay","arg","resetStore","innerHTML","clearButton","addEventListener","isOperator","entry","numClick","e","value","target","join","numButtons","getElementsByClassName","operatorClick","push","operatorButtons","decimalClick","point","equalsClick","answer","toFixed","toPrecision","equalsButton"],"mappings":"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","file":"Calculator.2495f0a1.map","sourceRoot":"..","sourcesContent":["export const calculate = (num1, o, num2) => {\n  let n1 = Number(num1);\n  let n2 = Number(num2);\n  switch (o) {\n    case \"+\": {\n      return n1 + n2;\n    }\n    case \"-\": {\n      return n1 - n2;\n    }\n    case \"x\": {\n      return n1 * n2;\n    }\n    case \"รท\": {\n      return n1 / n2;\n    }\n    default: {\n      return undefined;\n    }\n  }\n};\n\nexport const initialOperators = sum => {\n  return sum.findIndex(item => item === \"x\" || item === \"รท\");\n};\n\nexport const secondOperators = sum => {\n  return sum.findIndex(item => item === \"+\" || item === \"-\");\n};\n\nexport const operatorEnd = sum => {\n  let last = sum[sum.length - 1];\n  if (last === \"+\" || last === \"-\" || last === \"x\" || last === \"รท\") {\n    return true;\n  }\n  return false;\n};\n\nexport const equals = sum => {\n  if (operatorEnd(sum)) {\n    sum.splice(sum.length - 1, 1);\n  }\n  while (initialOperators(sum) !== -1) {\n    let i = initialOperators(sum);\n    let mini = sum.slice(i - 1, i + 2);\n    let ans = calculate(...mini);\n    sum.splice(i - 1, 3, ans);\n  }\n  while (secondOperators(sum) !== -1) {\n    let i = secondOperators(sum);\n    let mini = sum.slice(i - 1, i + 2);\n    let ans = calculate(...mini);\n    sum.splice(i - 1, 3, ans);\n  }\n  return sum[0];\n};\n","import { equals } from \"./calculate\";\n\nlet displayNum = \"\";\nlet storeSum = [];\nlet storeOperator = \"\";\nlet decimal = \"\";\nlet lastClicked = \"\";\n\nlet display = document.getElementById(\"display\");\nlet rt = document.getElementById(\"running\");\n\n// TODO: When adding +/- button use Math.abs() to get from negative to positive.\n\nconst clearDisplay = arg => {\n  resetStore();\n  lastClicked = \"\";\n  display.innerHTML = displayNum;\n  rt.innerHTML = storeSum;\n};\nlet clearButton = document.getElementById(\"clear\");\nclearButton.addEventListener(\"click\", clearDisplay);\n\nconst resetStore = () => {\n  displayNum = \"\";\n  storeSum = [];\n  storeOperator = \"\";\n  decimal = \"\";\n};\n\nconst isOperator = entry => {\n  if (entry === \"+\" || entry === \"-\" || entry === \"x\" || entry === \"รท\") {\n    return true;\n  }\n  return false;\n};\n\nconst numClick = e => {\n  let value = e.target.value;\n  storeOperator = \"\";\n  if (isOperator(lastClicked)) {\n    displayNum = \"\";\n  }\n  if (lastClicked === \"=\") {\n    resetStore();\n    display.innerHTML = displayNum;\n    rt.innerHTML = storeSum;\n  }\n  if (displayNum === \"0\") {\n    displayNum = \"\";\n  }\n  if (displayNum.length < 10) {\n    displayNum += value;\n  }\n  lastClicked = value;\n  display.innerHTML = displayNum;\n  rt.innerHTML = storeSum.join(\" \") + displayNum;\n};\n\nlet numButtons = document.getElementsByClassName(\"number\");\nfor (let i = 0; i < numButtons.length; i++) {\n  numButtons[i].addEventListener(\"click\", numClick);\n}\n\nconst operatorClick = e => {\n  if (!isOperator(lastClicked)) {\n    storeSum.push(displayNum);\n  }\n  let value = e.target.value;\n  lastClicked = value;\n  if (storeOperator === \"\") {\n    storeOperator = value;\n    displayNum = storeOperator;\n    decimal = \"\";\n    storeSum.push(value);\n  }\n  display.innerHTML = displayNum;\n  rt.innerHTML = storeSum.join(\" \");\n};\n\nlet operatorButtons = document.getElementsByClassName(\"action\");\nfor (let i = 0; i < operatorButtons.length; i++) {\n  operatorButtons[i].addEventListener(\"click\", operatorClick);\n}\n\nconst decimalClick = e => {\n  if (displayNum === \"\") {\n    lastClicked = e.target.value;\n    decimal += e.target.value;\n    displayNum += 0;\n    displayNum += decimal;\n  } else if (decimal === \"\") {\n    lastClicked = e.target.value;\n    decimal += e.target.value;\n    displayNum += decimal;\n  }\n  display.innerHTML = displayNum;\n  rt.innerHTML = storeSum.join(\" \") + displayNum;\n};\n\nlet point = document.getElementById(\"point\");\npoint.addEventListener(\"click\", decimalClick);\n\nconst equalsClick = e => {\n  storeSum.push(displayNum);\n  displayNum = equals(storeSum);\n  let answer = Number(displayNum).toFixed(8);\n  display.innerHTML = Number(answer).toPrecision();\n  lastClicked = e.target.value;\n  storeSum = [];\n  storeOperator = \"\";\n  decimal = \"\";\n};\n\nlet equalsButton = document.getElementById(\"equals\");\nequalsButton.addEventListener(\"click\", equalsClick);\n"]}